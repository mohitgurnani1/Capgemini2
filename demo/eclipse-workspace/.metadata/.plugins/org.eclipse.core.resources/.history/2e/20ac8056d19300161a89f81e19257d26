class Table{  
  
synchronized  static void printTable(int n){  
   for(int i=1;i<=10;i++){  
     System.out.println(n*i);  
     try{  
       Thread.sleep(400);  
     }catch(Exception e){}  
   }  
 }  
}  
  
class MyThread1 extends Thread{  
public void run(){  
Table t1=new Table();
t1.printTable(1);  
}  
}  
  
class MyThread2 extends Thread{  
public void run(){  
	Table t2=new Table();
t2.printTable(10);  

}  
}  
  
class MyThread3 extends Thread{  
public void run(){  
	for(int i=1;i<100;i++)
	{		System.out.println("thread status "+isAlive()+" state "+getState()+i);
			try {
				sleep(1000);
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
	}

}  
}  
  
  
  
  
class MyThread4 extends Thread{  
public void run(){  
	Table t4= new Table();
	t4.printTable(1000);  
}  
}  
  
public class TestSynchronization4{  
public static void main(String t[]){  
Thread t1=new Thread(new MyThread3());
System.out.println("main"+t1.isAlive());
t1.start();
System.out.println("main"+t1.isAlive());
System.out.println("main"+t1.isAlive());
System.out.println("main"+t1.isAlive());
System.out.println("main"+t1.isAlive());
System.out.println("main"+t1.isAlive());
System.out.println("main"+t1.isAlive());
System.out.println("main"+t1.isAlive());
System.out.println("main"+t1.isAlive());


}  
}